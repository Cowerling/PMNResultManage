(function ($) {
    $.fn.activeMenu = function (exclusive) {
        if (exclusive) {
            $(".sidebar-menu > .active").removeClass("active")
        }

        $(this).addClass("active");
    };

    $.fn.createDataTable = function (url, admin) {
        var data_table = $(this);

        data_table.on("draw.dt", function () {
            if (admin) {
                $(this).find(".table-tools").append("<a class='project-delete' href='#'><i class='fa fa-trash-o table-delete-tool'></i></a>");
            }

            $(this).find(".table-tools").hide();

            $(this).find(".project-delete").click(function (event) {
                event.preventDefault();
                var project_tag = $(this).prev().attr("href");

                $(".project-remove-hint").find("form").attr("action", CONSTANT.PROJECT_REMOVE_URL);
                $(".project-remove-hint").find("input.project-tag").val(project_tag);

                $(".project-remove-hint").modal("show")
            });

            $(this).on("mouseover", "tr", function (event) {
                $(this).find(".table-tools").show();
            });

            $(this).on("mouseout", "tr", function (event) {
                $(this).find(".table-tools").hide();
            });
        }).DataTable({
            columns: [
                {
                    name: "name",
                    data: "name"
                },
                {
                    name: "category",
                    data: "category"
                },
                {
                    name: "create_time",
                    data: "create_time"
                },
                {
                    name: "status",
                    data: "status"
                }
            ],
            searching: false,
            serverSide: true,
            processing: true,
            ajax: {
                url: url,
                data: function (parameters) {
                    return $.extend({}, {
                        request: JSON.stringify(parameters),
                        search: data_table.find(".search-condition").val()
                    });
                },
                dataSrc: function (result) {
                    result.recordsTotal = result.count
                    result.recordsFiltered = result.projects.length;

                    for (var i =0, length = result.projects.length; i < length; i++) {
                        result.projects[i].name = result.projects[i].name + "<span class='table-tools'><a href='" + result.projects[i].tag + "'>\u8be6\u60c5</a></span>"
                        result.projects[i].create_time = $(new Date(result.projects[i].createTime)).dateFormat("yyyy-MM-dd hh:mm:ss");

                        var status = "\u672a\u77e5\u72b6\u6001";
                        var status_color_style = "";
                        switch (result.projects[i].status) {
                            case "WAIT":
                                status = "\u672a\u5f00\u59cb";
                                status_color_style = "label-danger";
                                break;
                            case "PROGRESS":
                                status = "\u8fdb\u884c\u4e2d";
                                status_color_style = "label-info";
                                break;
                            case "FINISH":
                                status = "\u7ed3\u675f";
                                status_color_style = "label-success";
                                break;
                            default:
                                break;
                        }
                        result.projects[i].status = "<span class='lable table-status " + status_color_style + "'>" + status + "</span>";
                    }

                    return result.projects;
                }
            },
            language: {
                lengthMenu: "\u6bcf\u9875\u663e\u793a _MENU_ \u6761\u8bb0\u5f55",
                zeroRecords: "\u6ca1\u6709\u68c0\u7d22\u5230\u6570\u636e",
                info: "\u4ece _START_ \u5230 _END_\u002c\u0020\u5171 _TOTAL_ \u6761\u6570\u636e",
                infoEmpty: "\u6761\u6570\u636e",
                infoFiltered: "(\u4ece _MAX_ \u6761\u6570\u636e\u4e2d\u68c0\u7d22)",
                paginate: {
                    first: "\u9996\u9875",
                    last: "\u5c3e\u9875",
                    next: "\u540e\u4e00\u9875",
                    previous: "\u524d\u4e00\u9875"
                }
            }
        });
    };

    $.fn.initUserListTree = function (user_grade, multiSelect, user_search, search_content) {
        var user_list_tree = $(this);

        user_list_tree.treeview({
            levels: 1,
            showTags: true,
            searchResultBackColor: "#ffe500",
            multiSelect: multiSelect,
            data: (function () {
                var departments = null;

                $.ajax({
                    type : "get",
                    url : CONSTANT.DEPARTMENT_LIST_URL,
                    data: {
                        userGrade: typeof user_grade == "string" ? user_grade : user_grade.val()
                    },
                    async : false,
                    success : function(result){
                        for (var i = 0, length = result.length; i < length; i++) {
                            $.extend(result[i], {
                                text: result[i].name,
                                tags: [result[i].specificNumber],
                                selectable: false,
                                icon: "glyphicon glyphicon-book",
                                lazyLoad: result[i].specificNumber != 0
                            });
                        }

                        departments = result;
                    }
                });

                return departments;
            })(),
            lazyLoad: function (node, addNode) {
                $.get(CONSTANT.DEPARTMENT_USERS_URL, {
                    departmentTag: node.tag,
                    userGrade: typeof user_grade == "string" ? user_grade : user_grade.val()
                }, function (result) {
                    for (var i = 0, length = result.length; i < length; i++) {
                        $.extend(result[i], {
                            text: result[i].alias,
                            selectable: true,
                            icon: "glyphicon glyphicon-user"
                        });
                    }

                    addNode(result);
                });
            }
        });

        if (typeof user_search != "undefined" && typeof search_content != "undefined") {
            user_search.click(function (event) {
                user_list_tree.treeview("search", [search_content.val(), {
                    exactMatch: true,
                    revealResults: true
                }]);

                $.get(CONSTANT.DEPARTMENT_LIST_URL, {
                    userGrade: user_grade.val(),
                    userAlias: search_content.val() != "" ? search_content.val() : "none"
                }, function (result) {
                    for (var i = 0, length = result.length; i < length; i++) {
                        if (i == length - 1) {
                            user_list_tree.addClass("search");
                        }

                        user_list_tree.treeview("expandNode",
                            [
                                user_list_tree.treeview("findNodes", result[i].name),
                                { silent: true }
                            ]
                        );
                    }
                });
            });
        }
    };

    $.fn.createDetailUserSelectModal = function (user_grade, multiSelect, title, url, input_user_name) {
        var modal = $(this);
        var search_content = modal.find(".search-content"), user_search = modal.find(".user-search");
        var user_list_tree = modal.find(".tree-view");
        var user_message = modal.find(".user-message"), user_unselected = modal.find(".user-unselected");
        var form = modal.find("form");
        var input_user = modal.find(".input-user");

        modal.find(".modal-title").text(title);

        user_list_tree.initUserListTree(user_grade, multiSelect, user_search, search_content);

        user_list_tree.on("nodeSelected", function(event, node) {
            if (multiSelect) {
                var select_names = user_list_tree.treeview("getSelected").map(item => item.name);
                user_message.text("\u9009\u4e2d: " + select_names.length + "\u4eba");
                input_user.val(JSON.stringify(select_names));
            } else {
                user_message.text("\u9009\u4e2d: " + node.alias);
                input_user.val(node.name);
            }

            user_unselected.hide();
        });
        user_list_tree.on("nodeUnselected", function(event, node) {
            if (multiSelect) {
                var select_names = user_list_tree.treeview("getSelected").map(item => item.name);
                user_message.text(select_names.length != 0 ? "\u9009\u4e2d: " + select_names.length + "\u4eba": "");
                input_user.val(JSON.stringify(select_names));
            } else {
                user_message.text("");
                input_user.val("");
            }
        });
        user_list_tree.on("nodeExpanded", function(event, node) {
            if (user_list_tree.hasClass("search")) {
                user_list_tree.treeview("search", [search_content.val(), {
                    exactMatch: true,
                    revealResults: true
                }]);

                user_list_tree.removeClass("search");
            }
        });

        form.attr("action", url);

        form.on("submit", function (event) {
            if (input_user.val() == "") {
                event.preventDefault();
                user_unselected.show();
            }
        });

        $(this).on("show.bs.modal", function (event) {
            user_message.text("");
            search_content.val("");
            input_user.attr("name", input_user_name).val("");
            user_unselected.hide();
            user_list_tree.treeview("clearSearch");
            user_list_tree.treeview("collapseAll", { silent: true });
            user_list_tree.treeview("unselectNode", [ user_list_tree.treeview("getSelected"), { silent: true } ]);
        });
    };

    $.fn.createMultiUsersSelectModal = function () {
        var modal = $(this);
        var search_content = modal.find(".search-content"), user_search = modal.find(".user-search");
        var user_grade = modal.find(".user-grade"), user_list_tree = modal.find(".tree-view");
        var user_message = modal.find(".user-message"), user_unselected = modal.find(".user-unselected");
        var input_user_alias = modal.find(".input-user-alias"), input_user = modal.find(".input-user");

        function pushItem(list, item) {
            var list_content = list.val() != "" ? list.val().split(";") : [];
            list_content.push(item);
            list.val(list_content.join(";"));

            return list_content.length;
        }

        function removeItem(list, item) {
            var list_content = list.val().split(";");
            list_content.splice(list_content.indexOf(item), 1);
            list.val(list_content.join(";"));

            return list_content.length;
        }

        $(this).on("show.bs.modal", function (event) {
            user_list_tree.initUserListTree(user_grade, true, user_search, search_content);

            user_list_tree.on("nodeSelected", function(event, node) {
                pushItem(input_user_alias, node.alias);
                var count = pushItem(input_user, node.name);

                user_message.text("\u9009\u4e2d: " + count + "\u4eba");

                user_unselected.hide();
            });
            user_list_tree.on("nodeUnselected", function(event, node) {
                removeItem(input_user_alias, node.alias);
                var count = removeItem(input_user, node.name);

                user_message.text(count != 0 ? "\u9009\u4e2d: " + count + "\u4eba": "");
            });
            user_list_tree.on("nodeExpanded", function(event, node) {
                if (user_list_tree.hasClass("search")) {
                    user_list_tree.treeview("search", [search_content.val(), {
                        exactMatch: true,
                        revealResults: true
                    }]);

                    user_list_tree.removeClass("search");
                }
            });

            user_message.text("");
            search_content.val("");
            input_user.val("");
            input_user_alias.val("");
            user_unselected.hide();
        });
    };

    $.fn.createDateRangePicker = function () {
        var date_input = $(this);

        date_input.daterangepicker({
            locale: {
                format: "YYYY-MM-DD HH:mm:ss",
                separator: " - ",    //到
                applyLabel: "\u786e\u5b9a", //确定
                cancelLabel: "\u53d6\u6d88",    //取消
                fromLabel: "\u8d77\u59cb\u65f6\u95f4",  //起始时间
                toLabel: "\u7ed3\u675f\u65f6\u95f4",    //结束时间
                customRangeLabel: "\u81ea\u5b9a\u4e49",    //自定义
                weekLabel: "\u5468",    //周
                daysOfWeek: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],    //星期
                monthNames: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], //月份
                firstDay: 1
            },
            startDate: $(new Date()).dateFormat("yyyy-MM-dd hh:mm:ss"),
            endDate: $(new Date()).dateFormat("yyyy-MM-dd hh:mm:ss"),
            timePicker: true,
            timePickerIncrement: 30
        });
    }
})(jQuery);