(function ($) {
    $.listTableLanguage = {
        lengthMenu: "\u6bcf\u9875\u663e\u793a _MENU_ \u6761\u8bb0\u5f55",
            zeroRecords: "\u6ca1\u6709\u68c0\u7d22\u5230\u6570\u636e",
            info: "\u4ece _START_ \u5230 _END_\u002c\u0020\u5171 _TOTAL_ \u6761\u6570\u636e",
            infoEmpty: "\u6761\u6570\u636e",
            infoFiltered: "(\u4ece _MAX_ \u6761\u6570\u636e\u4e2d\u68c0\u7d22)",
            paginate: {
            first: "\u9996\u9875",
                last: "\u5c3e\u9875",
                next: "\u540e\u4e00\u9875",
                previous: "\u524d\u4e00\u9875"
        }
    };

    $.fn.activeMenu = function (exclusive) {
        if (exclusive) {
            $(".sidebar-menu > .active").removeClass("active")
        }

        $(this).addClass("active");
    };

    $.fn.selectUserModal = function (url, data, multiSelect, resultFunction, title) {
        let id = $(this).attr("id");

        $(this).replaceWith("<div class='modal fade' id='" + id + "'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><button type='button' class='close' data-dismiss='modal' aria-label='Close'><span aria-hidden='true'>&times;</span></button><h4 class='modal-title'>" + (title ? title : "") + "</h4></div><div><div class='modal-body'><div class='input-group margin-bottom-10'><input type='text' class='form-control search-content'><span class='input-group-btn'><button type='button' class='btn btn-primary user-search'><i class='fa fa-search' aria-hidden='true'></i></button></span></div><div><div class='tree-view'></div></div><span class='label label-warning' style='font-size: 100%; font-weight: normal;'><i class='fa fa-star-o width-8-per'></i><span class='user-message'></span></span></div><div class='modal-footer'><button type='button' class='btn btn-primary ok' data-dismiss='modal'>\u786e\u5b9a</button></div></div></div></div></div>");

        let $selectUserModal = $("#" + id);

        $selectUserModal.find("div.tree-view").treeview({
            levels: 1,
            showTags: true,
            searchResultBackColor: "#ffe500",
            multiSelect: multiSelect,
            data: (function () {
                let departments = [];

                $.ajax({
                    type : "get",
                    url : url,
                    data: data,
                    async : false,
                    success : function(result){
                        for (let department in result) {
                            let users = [];
                            for (let i = 0, length = result[department].length; i < length; i++) {
                                $.extend(result[department][i], {
                                    text: result[department][i].alias,
                                    selectable: true,
                                    icon: "glyphicon glyphicon-user"
                                });

                                users.push(result[department][i]);
                            }

                            departments.push({
                                text: department,
                                tags: [result[department].length],
                                selectable: false,
                                icon: "glyphicon glyphicon-book",
                                nodes: users
                            });
                        }
                    }
                });

                return departments;
            })(),
            onNodeSelected: function (event, node) {
                let select_name = $selectUserModal.find("div.tree-view").treeview("getSelected").map(item => item.name);
                $selectUserModal.find("span.user-message").text("\u9009\u4e2d: " + select_name.length + "\u4eba");
            },
            onNodeUnselected: function (event, node) {
                let select_name = $selectUserModal.find("div.tree-view").treeview("getSelected").map(item => item.name);
                $selectUserModal.find("span.user-message").text(select_name.length != 0 ? "\u9009\u4e2d: " + select_name.length + "\u4eba" : "");
            }
        });

        $selectUserModal.find("button.user-search").click(function (event) {
            $selectUserModal.find(".tree-view").treeview("search", [$selectUserModal.find("input.search-content").val(), {
                exactMatch: false,
                revealResults: true
            }]);
        });

        $selectUserModal.find("button.ok").click(resultFunction);

        return $selectUserModal;
    };

    $.fn.getSelectedUserNames = function () {
        return $(this).find("div.tree-view").treeview("getSelected").map(item => item.name);
    };

    $.fn.getSelectedUserAliases = function () {
        return $(this).find("div.tree-view").treeview("getSelected").map(item => item.alias);
    };

    $.createDataRecordStatus = function (status) {
        let status_name = "", status_color_style = "";

        switch (status) {
            case "UNAUDITED":
                status_name = "\u672a\u5ba1\u6838";
                status_color_style = "label-info";
                break;
            case "QUALIFIED":
                status_name = "\u5408\u683c";
                status_color_style = "label-success";
                break;
            case "UNQUALIFIED":
                status_name = "\u4e0d\u5408\u683c";
                status_color_style = "label-danger";
                break;
            default:
                break;
        }

        return "<span class='lable table-status " + status_color_style + "'>" + status_name + "</span>";
    };

    $.createDataRecordOperation = function (authorities, tag, exclude, addition) {
        let operation = "";

        for (let i = 0, length = authorities.length; i < length; i++) {
            let authority = authorities[i];

            if (!!(exclude) && ($.inArray(authority, exclude) >= 0)) {
                continue;
            }

            let operation_name = "", operation_style = "";

            switch (authority) {
                case "VIEW":
                    operation_name = "\u67e5\u9605";
                    operation_style = "label-primary";
                    break;
                case "DOWNLOAD":
                    operation_name = "\u4e0b\u8f7d";
                    operation_style = "label-primary";
                    break;
                case "EDIT":
                    operation_name = "\u7f16\u8f91";
                    operation_style = "label-primary";
                    break;
                case "DELETE":
                    operation_name = "\u5220\u9664";
                    operation_style = "label-danger";
                    break;
                default:
                    break;
            }

            operation += "<span class='label table-status " + operation_style + "' style='font-size: 100%; margin-right: 3px;'><a class='text-white " + authority.toLowerCase() + "' href='../data/" + authority.toLowerCase() + "/" + tag + "'>" + operation_name + "</a></span>";
        }

        if (!!(addition)) {
            operation += addition;
        }

        return operation;
    };

    $.createProjectName = function (name, tag) {
        return name + "<span class='table-tools'><a href='" + tag + "'>\u8be6\u60c5</a></span>";
    };

    $.createProjectStatus = function (status) {
        let status_name = "", status_color_style = "";

        switch (status) {
            case "WAIT":
                status_name = "\u672a\u5f00\u59cb";
                status_color_style = "label-danger";
                break;
            case "PROGRESS":
                status_name = "\u8fdb\u884c\u4e2d";
                status_color_style = "label-info";
                break;
            case "FINISH":
                status_name = "\u7ed3\u675f";
                status_color_style = "label-success";
                break;
            default:
                break;
        }

        return "<span class='lable table-status " + status_color_style + "'>" + status_name + "</span>";;
    };

    $.fn.initProjectTools = function () {
        $(this).find(".table-tools").hide();

        $(this).on("mouseover", "tr", function (event) {
            $(this).find(".table-tools").show();
        });

        $(this).on("mouseout", "tr", function (event) {
            $(this).find(".table-tools").hide();
        });
    };

    $.fn.bindLayer = function (layer, add, remove) {
        let geometry_type_style = "fa-question-circle";
        switch (layer.get("geometry_type")) {
            case "point":
                geometry_type_style = "fa-dot-circle-o";
                break;
            case "polyline":
                geometry_type_style = "fa-code-fork";
                break;
            case "polygon":
                geometry_type_style = "fa-object-ungroup";
                break;
            default:
                break;
        }

        let $item = $(
            "<div class='form-group'>" +
            "<label>" +
            "<input type='checkbox' class='minimal' " + (layer.getVisible() ? "checked" : "") + " data-layer />" +
            "<i class='fa " + geometry_type_style + " text-success layer-icon' aria-hidden='true'></i>" +
            "<span class='layer-label'>" + layer.get("name") + "</span>" +
            "</label>" +
            (!!(remove) ? "<button type='button' class='btn btn-box-tool pull-right'><i class='fa fa-trash-o text-danger' aria-hidden='true'></i></button>" : "") +
            "</div>").prependTo($(this));

        let $checkbox = $item.find("input[type=checkbox]");

        $checkbox.iCheck({
            checkboxClass: "icheckbox_minimal-blue",
            radioClass: "iradio_minimal-blue"
        });

        $checkbox.data("layer", layer);

        $checkbox.on("ifClicked", function (event) {
            $(this).data("layer").setVisible(!$(this).is(":checked"));
        });

        if (!!(add)) {
            add(layer);
        }

        if (!!(remove)) {
            let $button = $item.find("button");

            $button.click(function (event) {
                remove(layer);
                $item.remove();
            });
        }
    };

    $.fn.createDateRangePicker = function () {
        var date_input = $(this);

        date_input.daterangepicker({
            locale: {
                format: "YYYY-MM-DD HH:mm:ss",
                separator: " - ",    //到
                applyLabel: "\u786e\u5b9a", //确定
                cancelLabel: "\u53d6\u6d88",    //取消
                fromLabel: "\u8d77\u59cb\u65f6\u95f4",  //起始时间
                toLabel: "\u7ed3\u675f\u65f6\u95f4",    //结束时间
                customRangeLabel: "\u81ea\u5b9a\u4e49",    //自定义
                weekLabel: "\u5468",    //周
                daysOfWeek: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],    //星期
                monthNames: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], //月份
                firstDay: 1
            },
            startDate: $(new Date()).dateFormat("yyyy-MM-dd hh:mm:ss"),
            endDate: $(new Date()).dateFormat("yyyy-MM-dd hh:mm:ss"),
            timePicker: true,
            timePickerIncrement: 30
        });
    }
})(jQuery);